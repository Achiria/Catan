/*
 * Copyright (C) 2014 Anthony Gamboa
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package catan1.pkg1;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JComponent;

/**
 *
 * @author Anthony Gamboa
 */
public class PogComponent extends JComponent
{
    @Override
    public void paintComponent(Graphics g)
    {
        Graphics2D g2 = (Graphics2D) g;

        final int WIDTH = 7;
        final int HEIGHT = 7;
        final int xCent = 100;
        final int yCent = 100;
        final int xDiff = 120;
        final int yDiff = 138;
        final ArrayList<Integer> pogNumbs = new ArrayList<>();
        Random ran = new Random();

        pogNumbs.addAll(Arrays.asList(2, 3, 3, 4, 4, 5, 5, 6, 6, 8, 8, 9, 9, 10, 10, 11, 11, 12));

        for (int i = 0; i < WIDTH; i++)
        {
            for (int j = 0; j < HEIGHT; j++)
            {
                if (Board.table[i][j].getLand() && Board.table[i][j].getResource() != 5)
                {
                    if (i % 2 == 0)
                    {
                        Ellipse2D.Double pog = new Ellipse2D.Double(xCent - 20 + (i * xDiff), yCent - 20 + (j * yDiff), 40, 40);
                        g2.setColor(Color.WHITE);
                        g2.fill(pog);
                        g2.setColor(Color.BLACK);
                        g2.draw(pog);

                        int temp = ran.nextInt(pogNumbs.size());
                        Integer toDraw = pogNumbs.get(temp);
                        if (toDraw == 6 || toDraw == 8)
                        {
                            g2.setColor(Color.RED);
                        }
                        g2.drawString(toDraw.toString(), xCent + (i * xDiff) - 4, yCent + (j * yDiff) + 5);
                        pogNumbs.remove(temp);
                    }

                    else
                    {
                        Ellipse2D.Double pog = new Ellipse2D.Double(xCent - 20 + (i * xDiff), yCent - 20 + (j * yDiff) + 69, 40, 40);
                        g2.setColor(Color.WHITE);
                        g2.fill(pog);
                        g2.setColor(Color.BLACK);
                        g2.draw(pog);

                        int temp = ran.nextInt(pogNumbs.size());
                        Integer toDraw = pogNumbs.get(temp);
                        if (toDraw == 6 || toDraw == 8)
                        {
                            g2.setColor(Color.RED);
                        }
                        g2.drawString(toDraw.toString(), xCent + (i * xDiff) - 4, yCent + (j * yDiff) + 5 + 69);
                        pogNumbs.remove(temp);
                    }
                }
            }
        }
    }
}
